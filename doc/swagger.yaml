components:
  schemas:
    dto.ChatListResponse:
      properties:
        directs:
          items:
            $ref: '#/components/schemas/dto.DirectChatListResponse'
          type: array
          uniqueItems: false
        groups:
          items:
            $ref: '#/components/schemas/dto.GroupChatListResponse'
          type: array
          uniqueItems: false
      type: object
    dto.CreateGroupRequest:
      properties:
        name:
          type: string
        profilePictureUrl:
          type: string
      type: object
    dto.DirectChatDetailResponse:
      properties:
        messages:
          items:
            $ref: '#/components/schemas/dto.DirectMessageResponse'
          type: array
          uniqueItems: false
        user:
          $ref: '#/components/schemas/dto.UserResponse'
      type: object
    dto.DirectChatListResponse:
      properties:
        lastMessage:
          $ref: '#/components/schemas/dto.DirectMessageResponse'
        user:
          $ref: '#/components/schemas/dto.UserResponse'
      type: object
    dto.DirectMessageResponse:
      properties:
        content:
          type: string
        id:
          type: integer
        receiverId:
          type: integer
        sendedAt:
          type: string
        senderId:
          type: integer
      type: object
    dto.FileDetailResponse:
      properties:
        id:
          type: integer
        ownerId:
          type: integer
        path:
          type: string
        url:
          type: string
      type: object
    dto.GroupChatListResponse:
      properties:
        group:
          $ref: '#/components/schemas/dto.GroupListResponse'
        lastMessage:
          items:
            $ref: '#/components/schemas/dto.GroupMessageResponse'
          type: array
          uniqueItems: false
      type: object
    dto.GroupDetailResponse:
      properties:
        id:
          type: integer
        members:
          items:
            $ref: '#/components/schemas/dto.UserResponse'
          type: array
          uniqueItems: false
        messages:
          items:
            $ref: '#/components/schemas/dto.GroupMessageResponse'
          type: array
          uniqueItems: false
        name:
          type: string
        owner:
          $ref: '#/components/schemas/dto.UserResponse'
        profilePictureURL:
          type: string
      type: object
    dto.GroupListResponse:
      properties:
        id:
          type: integer
        name:
          type: string
        owner:
          $ref: '#/components/schemas/dto.UserResponse'
        profilePictureURL:
          type: string
      type: object
    dto.GroupMessageResponse:
      properties:
        content:
          type: string
        groupId:
          type: integer
        id:
          type: integer
        sendedAt:
          type: string
        senderId:
          type: integer
      type: object
    dto.HttpError:
      properties:
        error:
          type: string
      type: object
    dto.HttpListResponse-dto_UserResponse:
      properties:
        result:
          items:
            $ref: '#/components/schemas/dto.UserResponse'
          type: array
          uniqueItems: false
      type: object
    dto.HttpResponse-ChatListResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.ChatListResponse'
      type: object
    dto.HttpResponse-dto_DirectChatDetailResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.DirectChatDetailResponse'
      type: object
    dto.HttpResponse-dto_FileDetailResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.FileDetailResponse'
      type: object
    dto.HttpResponse-dto_GroupDetailResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.GroupDetailResponse'
      type: object
    dto.HttpResponse-dto_LoginResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.LoginResponse'
      type: object
    dto.HttpResponse-dto_TokenResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.TokenResponse'
      type: object
    dto.HttpResponse-dto_UserResponse:
      properties:
        result:
          $ref: '#/components/schemas/dto.UserResponse'
      type: object
    dto.LoginRequest:
      properties:
        idToken:
          type: string
      type: object
    dto.LoginResponse:
      properties:
        accessToken:
          type: string
        exp:
          type: integer
        refreshToken:
          type: string
        user:
          $ref: '#/components/schemas/dto.UserResponse'
      type: object
    dto.RefreshTokenRequest:
      properties:
        refreshToken:
          type: string
      type: object
    dto.TokenResponse:
      properties:
        accessToken:
          type: string
        exp:
          type: integer
        refreshToken:
          type: string
      type: object
    dto.UpdateGroupRequest:
      properties:
        id:
          type: integer
        name:
          type: string
        profilePicture:
          type: string
      type: object
    dto.UserResponse:
      properties:
        email:
          type: string
        id:
          type: integer
        name:
          type: string
        profilePictureUrl:
          type: string
      type: object
    dto.UserUpdateRequest:
      properties:
        email:
          type: string
        name:
          type: string
        profilePictureUrl:
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
externalDocs:
  description: ""
  url: ""
info:
  description: Pic Me Pls API Documentation
  title: Pic Me Pls API
  version: "0.1"
openapi: 3.1.0
paths:
  /api/v1/auth/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.LoginRequest'
        description: request request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_LoginResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      summary: Login
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RefreshTokenRequest'
        description: body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_TokenResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      summary: Refresh Token
      tags:
      - auth
  /api/v1/chats:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-ChatListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: list chat
      tags:
      - chats
  /api/v1/chats/friends/{friendID}:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_DirectChatDetailResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: get dm chats detail
      tags:
      - chats
  /api/v1/files:
    post:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: file
        description: file
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_FileDetailResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: upload file
      tags:
      - files
  /api/v1/files/{fileID}:
    delete:
      parameters:
      - description: file id
        in: path
        name: fileID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: delete file
      tags:
      - files
  /api/v1/friends:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpListResponse-dto_UserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: list user's friends
      tags:
      - friends
  /api/v1/friends/{friendID}:
    delete:
      parameters:
      - description: friend id
        in: path
        name: friendID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: unfriend
      tags:
      - friends
    post:
      parameters:
      - description: friend id
        in: path
        name: friendID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: add friend
      tags:
      - friends
  /api/v1/groups:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.CreateGroupRequest'
        description: group detail
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: create group
      tags:
      - groups
  /api/v1/groups/{groupID}:
    delete:
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: delete group
      tags:
      - groups
    get:
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_GroupDetailResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: get group
      tags:
      - groups
    patch:
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UpdateGroupRequest'
        description: group detail
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: update group
      tags:
      - groups
  /api/v1/groups/{groupID}/join:
    get:
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        schema:
          type: integer
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: join group
      tags:
      - groups
  /api/v1/groups/{groupID}/leave:
    get:
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        schema:
          type: integer
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: leave group
      tags:
      - groups
  /api/v1/groups/{groupID}/members/{userID}:
    delete:
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: kick group member
      tags:
      - groups
    post:
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: add group member
      tags:
      - groups
  /api/v1/me:
    get:
      description: Get me
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpResponse-dto_UserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get me
      tags:
      - user
    patch:
      description: Update user's profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UserUpdateRequest'
        description: request request
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.HttpError'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update me
      tags:
      - user
  /api/v1/messages/ws:
    get:
      description: |-
        Establish a WebSocket connection for real-time communication.
        The message from a server will be in a format of "[EVENT] [MESSAGE]" which [EVENT] can be "ERROR" or "MESSAGE".
        If [EVENT] is error, [MESSAGE] will be a string of error message ,otherwise it will be a dto.RealTimeMessageResponse
      responses:
        "101":
          description: Switching Protocols
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: connect to websocket
      tags:
      - message
